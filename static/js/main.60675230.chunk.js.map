{"version":3,"sources":["../../src/carousel.tsx","../../src/responsiveContainer.tsx","pages/carouselGenerator.tsx","pages/Demo.tsx","pages/CarouselPropPage.tsx","pages/ResponsiveContainer.tsx","pages/CommonQuestionPage.tsx","pages/ResponsiveExamplePage.tsx","pages/FadeDistanceExample.tsx","pages/CustomScaleExample.tsx","pages/PaginationExample.tsx","pages/Twitch.tsx","sideNav.tsx","App.tsx","index.tsx","pages/DOM.png","pages/fadeDistance.png","pages/twitchcover.jpg","pages/noice.gif"],"names":["StackedCarousel","validateProps","swipeSpeed","currentVisibleSlide","maxVisibleSlide","fadeDistance","customScales","data","Error","initializeProperties","constructor","carouselWidth","slideWidth","currentVisibleDisplaySlide","currentVisibleSlides","visibleSlidePerSide","slidePerSide","Math","totalRenderCount","renderedSlidePerSide","offsets","scaledOffsets","scales","newRenderedSlides","Array","slideIndex","dataIndex","slideInfoMap","newCenterSlideRelativeIndex","newCenterDataIndex","filledWidth","centerPosition","absIndex","offset","slideScale","currentOffSet","relativeIndex","position","opacity","scale","zIndex","key","i","left","right","maxRenderedSlidePerSide","direct","insertIndex","scalePositionIndex","sortedSlideInfo","Object","slide1","slide2","renderedSlides","centerSlideRelativeIndex","calculateScaleAndOffsets","availableSpace","scaledSlideWidths","slide","includedSlideWidths","fillingSpace","totalSlideWidth","a","offSetPercentage","isCustomFade","getZIndex","updateHeight","slideDOM","parsedHeight","parseInt","window","modDataRange","m","n","debouncedClearInvisibleSlide","transitionTime","clearTimeout","setTimeout","clearUselessSlide","absoluteSlideIndex","safeGetSlideInfo","positionIndex","getInsertionInfo","newAddedSlideIndex","steps","targetSlideIndex","requireMoreSlide","current","updateCount","moveCarousel","disableSwipeRightState","onActiveSlideChange","newSlides","oldSlide","newSlideIndex","slideInfo","maxSlideIndex","insertionInfo","insertPosition","insertDataIndex","insertSlide","keyCount","swipeStarted","swipRight","getSlideDOMInfo","listRef","slideRect","carouselLeft","additionalOffset","slideCenterOffset","getSlideScaleAndOpacity","targetSlide","maxTransformDistance","maxTransformScale","maxTransformOpacity","offsetPercentage","centerOffset","onSwipeStart","initalSwipeX","shiftDirection","centerDataIndex","swipePositionInfo","maxLeft","maxRight","prevRenderedSlides","onSwipe","tempShift","swipeDistance","delta","swipeLeft","transformFactor","transformPercentage","maxDeltaX","targetPosition","resetSlides","newDefault","onSwipeEnd","newCenterSlide","goNext","goBack","swipeTo","React","props","componentDidMount","this","componentWillUnmount","componentDidUpdate","prop1","prop2","shouldRecaclculate","prevProps","getSwipeX","e","render","Component","className","customTransition","useGrabCursor","height","cursor","onMouseDown","onMouseUp","onMouseMove","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","ref","style","width","overflow","ID","transition","isCenterSlide","draggable","display","transform","PureComponent","ResponsiveContainer","carouselRef","useResizeDetector","cover","title","ResponsiveCarousel","useButton","useRef","slideComponent","Card","undefined","Fab","top","size","color","onClick","memo","userSelect","objectFit","borderRadius","src","prev","next","CodeHighlight","Box","p","pt","pb","code","benefits","Demo","Divider","Typography","variant","component","href","target","map","content","index","fontWeight","PropsPage","mb","DOMSnapShot","marginBottom","prop","name","type","example","explanation","defaultValue","customExplanation","borderBottom","length","methods","method","default","fadeDistanceDemo","ResponsiveContainerProps","PerformancePage","marginTop","ResponsiveExamplePage","fadeDistanceExamplePage","CustomScaleExamplePage","PaginationExamplePage","useState","centerSlideDataIndex","setCenterSlideDataIndex","onCenterSlideDataIndexChange","useCallback","newIndex","mt","Pagination","CodeBox","justifyContent","_","background","border","fill","coverImage","video","noice","TwitchExample","Slide","disableSwipe","fontSize","loadDelay","setLoadDelay","removeDelay","setRemoveDelay","loaded","setLoaded","useEffect","CardHeader","avatar","Avatar","subheader","SideNav","openNav","pathname","useLocation","Drawer","anchor","classes","paper","List","introductions","api","examples","propExamples","pages","ListItem","ListItemText","primary","titles","label","route","button","Link","to","selected","CommonQuestionPage","ResponsiveContainerPropPage","App","flat","setNav","Page","path","exact","aria-label","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.60675230.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  props,\n  state,\n  slideInfoMap,\n  staticSlideInfo,\n  renderedSlide\n} from './interfaces';\n\nexport default class StackedCarousel extends React.PureComponent<props, state> {\n  static defaultScaleFactor: number = 0.85;\n  static defaultTransitionTime: number = 450;\n  private height: number;\n  private listRef: React.RefObject<HTMLDivElement>;\n  private slidePerSide: number;\n  private clearSlideTimeout: any;\n  private slideInfoMap: slideInfoMap;\n  private sortedSlideInfo: staticSlideInfo[];\n  private keyCount: number;\n  private addedSlide: number;\n  private centerPosition: number;\n  private maxZIndex: number;\n  private renderedSlidePerSide: number;\n\n  private validateProps = () => {\n    const {\n      swipeSpeed,\n      currentVisibleSlide,\n      maxVisibleSlide,\n      fadeDistance,\n      customScales,\n      data\n    } = this.props;\n    if (data.length < (maxVisibleSlide + 1) / 2) {\n      throw Error(\n        'you must have more than (maxVisibleSlide + 1) / 2 data item'\n      );\n    }\n    if (\n      (currentVisibleSlide && currentVisibleSlide % 2 !== 1) ||\n      maxVisibleSlide % 2 !== 1\n    ) {\n      throw Error(\n        'currentVisibleSlide or maxVisibleSlide must be an odd number'\n      );\n    }\n    if (currentVisibleSlide && currentVisibleSlide > maxVisibleSlide) {\n      throw Error('currentVisibleSlide must be smaller than maxVisibleSlide');\n    }\n    if (fadeDistance !== undefined) {\n      if (fadeDistance > 1 || fadeDistance < 0) {\n        throw Error('fadeDistance is a percentage value in the range of 0 - 1');\n      }\n    }\n    if (customScales && customScales.length !== (maxVisibleSlide + 3) / 2) {\n      throw Error('customScales must have lengh (maxVisibleSlide + 3) / 2');\n    }\n    if (swipeSpeed && (swipeSpeed > 0.99 || swipeSpeed < 0.01)) {\n      throw Error('swipeSpeed must have a value between 0.01 and 0.99');\n    }\n  };\n\n  private initializeProperties = (constructor: boolean = false) => {\n    this.validateProps();\n    const {\n      carouselWidth,\n      slideWidth,\n      currentVisibleSlide: currentVisibleDisplaySlide,\n      maxVisibleSlide\n    } = this.props;\n\n    const currentVisibleSlides = currentVisibleDisplaySlide || maxVisibleSlide;\n    const visibleSlidePerSide = (currentVisibleSlides - 1) / 2;\n    const slidePerSide = Math.max(visibleSlidePerSide + 1, 1);\n    const totalRenderCount = maxVisibleSlide + 2;\n    const renderedSlidePerSide = (maxVisibleSlide + 1) / 2;\n    const { offsets, scaledOffsets, scales } =\n      this.calculateScaleAndOffsets(slidePerSide);\n\n    const newRenderedSlides: renderedSlide[] = constructor\n      ? Array(totalRenderCount).fill(null)\n      : this.state.renderedSlides.filter(({ slideIndex, dataIndex }) => {\n          return dataIndex === -1 || Math.abs(slideIndex) <= this.slidePerSide;\n        });\n    const slideInfoMap = {};\n\n    const newCenterSlideRelativeIndex = constructor\n      ? (totalRenderCount - 1) / 2\n      : newRenderedSlides.findIndex(({ slideIndex }) => {\n          return slideIndex === 0;\n        });\n    const newCenterDataIndex = constructor\n      ? 0\n      : newRenderedSlides[newCenterSlideRelativeIndex].dataIndex;\n\n    let filledWidth = 0;\n    const centerPosition = carouselWidth / 2 - slideWidth / 2;\n    for (let absIndex = 0; absIndex <= slidePerSide; absIndex++) {\n      const offset = offsets[absIndex];\n      const slideScale = scales[absIndex];\n      const currentOffSet = filledWidth + offset;\n\n      [-absIndex, absIndex].forEach((slideIndex) => {\n        const relativeIndex = newCenterSlideRelativeIndex + slideIndex;\n        const position = slideIndex >= 0 ? currentOffSet : -currentOffSet;\n        const opacity = absIndex === slidePerSide ? 0 : 1;\n        const dataIndex = this.modDataRange(newCenterDataIndex + slideIndex);\n\n        newRenderedSlides[relativeIndex] = {\n          dataIndex,\n          scale: slideScale,\n          position: position,\n          slideIndex: slideIndex,\n          opacity: opacity,\n          zIndex: renderedSlidePerSide - Math.abs(slideIndex),\n          key: constructor ? slideIndex : newRenderedSlides[relativeIndex].key\n        };\n\n        slideInfoMap[slideIndex] = {\n          position: position,\n          scale: slideScale,\n          opacity: opacity\n        };\n      });\n      if (absIndex !== 0) filledWidth += scaledOffsets[absIndex];\n    }\n\n    for (let i = -slidePerSide; i <= slidePerSide; i++) {\n      slideInfoMap[i].maxTransformDistance = {};\n      slideInfoMap[i].maxTransformScale = {};\n      slideInfoMap[i].maxTransformOpacity = {\n        left: i === -slidePerSide + 1 || i === slidePerSide ? 1 : 0,\n        right: i === -slidePerSide || i === slidePerSide - 1 ? 1 : 0\n      };\n      slideInfoMap[i].slideIndex = i;\n\n      if (i === -slidePerSide) {\n        slideInfoMap[i].maxTransformDistance.left = 0;\n        slideInfoMap[i].maxTransformScale.left = 0;\n      } else {\n        slideInfoMap[i].maxTransformDistance.left =\n          slideInfoMap[i].position - slideInfoMap[i - 1].position;\n        slideInfoMap[i].maxTransformScale.left = Math.abs(\n          slideInfoMap[i].scale - slideInfoMap[i - 1].scale\n        );\n      }\n      if (i === slidePerSide) {\n        slideInfoMap[i].maxTransformDistance.right = 0;\n        slideInfoMap[i].maxTransformScale.right = 0;\n      } else {\n        slideInfoMap[i].maxTransformDistance.right =\n          slideInfoMap[i + 1].position - slideInfoMap[i].position;\n        slideInfoMap[i].maxTransformScale.right = Math.abs(\n          slideInfoMap[i + 1].scale - slideInfoMap[i].scale\n        );\n      }\n    }\n\n    // If the current slide to display is 5, but the previous slide to display is 7\n    // which happens when user sets a break point for responsive reasons\n    // we want to fill the 2 not displayed indices with some unique number\n    if (maxVisibleSlide > currentVisibleSlides) {\n      const maxRenderedSlidePerSide = (maxVisibleSlide + 1) / 2;\n      const currentSlidePerSide = slidePerSide;\n      for (let i = currentSlidePerSide + 1; i <= maxRenderedSlidePerSide; i++) {\n        for (let direct = 1; direct >= 0; direct--) {\n          const insertIndex =\n            newCenterSlideRelativeIndex + (direct === 1 ? i : -i);\n          const prevIndex = insertIndex + (direct === 1 ? -1 : 1);\n          const slideIndex = direct === 1 ? i : -i;\n          const scalePositionIndex = constructor ? prevIndex : insertIndex;\n          newRenderedSlides[insertIndex] = {\n            scale: newRenderedSlides[scalePositionIndex].scale,\n            position: newRenderedSlides[scalePositionIndex].position,\n            key: constructor ? -slideIndex : newRenderedSlides[insertIndex].key,\n            dataIndex: -1,\n            slideIndex,\n            opacity: 0,\n            zIndex: 0\n          };\n        }\n      }\n    }\n\n    const sortedSlideInfo = Object.values(slideInfoMap as slideInfoMap);\n    sortedSlideInfo.sort((slide1, slide2) => {\n      return slide1.position - slide2.position;\n    });\n\n    return {\n      renderedSlides: newRenderedSlides,\n      centerSlideRelativeIndex: newCenterSlideRelativeIndex,\n      slideInfoMap,\n      slidePerSide,\n      newRenderedSlides,\n      sortedSlideInfo,\n      centerPosition,\n      renderedSlidePerSide\n    };\n  };\n\n  private calculateScaleAndOffsets = (slidePerSide: number) => {\n    const { carouselWidth, slideWidth, customScales, fadeDistance } =\n      this.props;\n\n    const availableSpace = carouselWidth / 2 - slideWidth / 2;\n    const scales = [1];\n    const scaledSlideWidths = [slideWidth];\n    for (let slide = 1; slide <= slidePerSide; slide++) {\n      const scale = customScales\n        ? customScales[slide]\n        : Math.pow(StackedCarousel.defaultScaleFactor, slide);\n      scales.push(scale);\n      scaledSlideWidths.push(slideWidth * scale);\n    }\n\n    let includedSlideWidths = scaledSlideWidths.slice(1);\n    let fillingSpace = availableSpace;\n    if (fadeDistance !== undefined) {\n      includedSlideWidths = scaledSlideWidths.slice(1, slidePerSide);\n      fillingSpace = availableSpace * (1 - fadeDistance);\n    }\n\n    const totalSlideWidth = includedSlideWidths.reduce((a, b) => a + b, 0);\n    const offSetPercentage = totalSlideWidth\n      ? fillingSpace / totalSlideWidth\n      : 0;\n\n    const scaledOffsets = [0];\n    const offsets = [0];\n    for (let slide = 1; slide <= slidePerSide; slide++) {\n      const isCustomFade = fadeDistance !== undefined && slide === slidePerSide;\n      const scale = scales[slide];\n      scaledOffsets[slide] = isCustomFade\n        ? (fadeDistance as number) * availableSpace\n        : slideWidth * scale * offSetPercentage;\n      offsets[slide] = scaledOffsets[slide] + slideWidth * ((1 - scale) / 2);\n    }\n    return { offsets, scaledOffsets, scales };\n  };\n\n  getZIndex = (slideIndex: number) => {\n    return this.renderedSlidePerSide - Math.abs(slideIndex);\n  };\n\n  constructor(props: props) {\n    super(props);\n    const {\n      renderedSlides,\n      slideInfoMap,\n      slidePerSide,\n      sortedSlideInfo,\n      centerPosition,\n      renderedSlidePerSide\n    } = this.initializeProperties(true);\n    const { onActiveSlideChange } = this.props;\n\n    this.slideInfoMap = slideInfoMap;\n    this.sortedSlideInfo = sortedSlideInfo;\n    this.slidePerSide = slidePerSide;\n    this.height = this.props.height || 0;\n    this.listRef = React.createRef();\n    this.clearSlideTimeout = null;\n    this.keyCount = props.data.length;\n    this.addedSlide = 0;\n    this.centerPosition = centerPosition;\n    this.maxZIndex = 100;\n    this.renderedSlidePerSide = renderedSlidePerSide;\n\n    if (onActiveSlideChange) {\n      onActiveSlideChange(0);\n    }\n\n    this.state = {\n      initalSwipeX: 0,\n      swipeStarted: false,\n      renderedSlides: renderedSlides,\n      prevRenderedSlides: [...renderedSlides],\n      swipePositionInfo: [],\n      swipRight: false,\n      tempShift: false\n    };\n  }\n\n  componentDidMount() {\n    this.updateHeight();\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.clearSlideTimeout);\n  }\n\n  componentDidUpdate(prevProps: props) {\n    if (!shouldRecaclculate(this.props, prevProps)) return;\n    const {\n      slideInfoMap,\n      slidePerSide,\n      newRenderedSlides,\n      sortedSlideInfo,\n      centerPosition\n    } = this.initializeProperties(\n      this.props.maxVisibleSlide !== prevProps.maxVisibleSlide\n    );\n\n    this.slideInfoMap = slideInfoMap;\n    this.sortedSlideInfo = sortedSlideInfo;\n    this.slidePerSide = slidePerSide;\n    this.centerPosition = centerPosition;\n\n    this.setState(() => {\n      return {\n        initalSwipeX: 0,\n        renderedSlides: newRenderedSlides,\n        prevRenderedSlides: [...newRenderedSlides],\n        swipRight: false\n      };\n    }, this.updateHeight);\n  }\n\n  private updateHeight = () => {\n    const { height } = this.props;\n    if (height) return;\n\n    const { slideDOM } = this.getSlideDOMInfo(0);\n    const parsedHeight = parseInt(\n      window.getComputedStyle(slideDOM as Element).height\n    );\n    if (parsedHeight !== this.height) {\n      this.height = parsedHeight;\n      this.forceUpdate();\n    }\n  };\n\n  private modDataRange = (n: number) => {\n    const { data } = this.props;\n    const m = data.length;\n    return ((n % m) + m) % m;\n  };\n\n  private debouncedClearInvisibleSlide = () => {\n    const { transitionTime } = this.props;\n    clearTimeout(this.clearSlideTimeout);\n    this.clearSlideTimeout = setTimeout(\n      this.clearUselessSlide,\n      transitionTime !== undefined\n        ? transitionTime\n        : StackedCarousel.defaultTransitionTime\n    );\n  };\n\n  private clearUselessSlide = () => {\n    this.addedSlide = 0;\n    const { renderedSlides } = this.state;\n    const newRenderedSlides = renderedSlides.filter(\n      ({ slideIndex, dataIndex }) => {\n        const absoluteSlideIndex = Math.abs(slideIndex);\n        if (absoluteSlideIndex <= this.slidePerSide || dataIndex === -1) {\n          return true;\n        }\n        return false;\n      }\n    );\n    this.setState({ renderedSlides: newRenderedSlides });\n  };\n\n  private safeGetSlideInfo = (slideIndex: number) => {\n    let positionIndex = slideIndex;\n    if (positionIndex > this.slidePerSide) {\n      positionIndex = this.slidePerSide;\n    } else if (positionIndex < -this.slidePerSide) {\n      positionIndex = -this.slidePerSide;\n    }\n    return this.slideInfoMap[positionIndex];\n  };\n\n  private getInsertionInfo = (steps: number) => {\n    const newAddedSlideIndex =\n      steps > 0\n        ? this.slidePerSide - steps + 1\n        : -this.slidePerSide - steps - 1;\n    const targetSlideIndex = steps > 0 ? this.slidePerSide : -this.slidePerSide;\n    const requireMoreSlide = (current: number, target: number) => {\n      return steps > 0 ? current <= target : current >= target;\n    };\n    const updateCount = steps > 0 ? 1 : -1;\n    return {\n      newAddedSlideIndex,\n      targetSlideIndex,\n      requireMoreSlide,\n      updateCount\n    };\n  };\n\n  private moveCarousel = (\n    steps: number,\n    disableSwipeRightState: boolean = false\n  ) => {\n    const { renderedSlides } = this.state;\n    const { onActiveSlideChange } = this.props;\n    let newCenterDataIndex = 0;\n\n    const newSlides = renderedSlides.map((oldSlide) => {\n      const { slideIndex, dataIndex } = oldSlide;\n      if (dataIndex === -1) return oldSlide;\n      if (slideIndex === 0)\n        newCenterDataIndex = this.modDataRange(dataIndex + steps);\n\n      const newSlideIndex = slideIndex + -steps;\n\n      const slideInfo = this.safeGetSlideInfo(newSlideIndex);\n      return {\n        ...oldSlide,\n        slideIndex: newSlideIndex,\n        position: slideInfo.position,\n        scale: slideInfo.scale,\n        opacity: slideInfo.opacity,\n        zIndex: this.getZIndex(newSlideIndex)\n      };\n    });\n\n    if (steps !== 0) {\n      const maxSlideIndex = steps > 0 ? this.slidePerSide : -this.slidePerSide;\n      this.addedSlide += Math.abs(steps);\n\n      const insertionInfo = this.getInsertionInfo(steps);\n      let { newAddedSlideIndex } = insertionInfo;\n      const { requireMoreSlide, updateCount, targetSlideIndex } = insertionInfo;\n\n      while (requireMoreSlide(newAddedSlideIndex, targetSlideIndex)) {\n        const slideAlreadyExist = newSlides.find(\n          ({ slideIndex }) => slideIndex === newAddedSlideIndex\n        );\n        if (!slideAlreadyExist) {\n          const insertPosition = newSlides.findIndex(\n            ({ slideIndex, dataIndex }) => {\n              return (\n                slideIndex === newAddedSlideIndex - updateCount &&\n                dataIndex !== -1\n              );\n            }\n          );\n\n          const { scale, position } = this.slideInfoMap[maxSlideIndex];\n          const insertDataIndex = this.modDataRange(\n            newSlides[insertPosition].dataIndex + updateCount\n          );\n          this.keyCount += 1;\n          const zIndex = this.getZIndex(newAddedSlideIndex);\n          const insertSlide = {\n            scale,\n            position,\n            opacity: 0,\n            zIndex: zIndex - this.addedSlide,\n            slideIndex: newAddedSlideIndex,\n            dataIndex: insertDataIndex,\n            key: this.keyCount\n          };\n\n          newSlides.splice(\n            steps > 0 ? insertPosition + 1 : insertPosition,\n            0,\n            insertSlide\n          );\n        }\n        newAddedSlideIndex += updateCount;\n      }\n    }\n\n    if (steps !== 0 && onActiveSlideChange) {\n      onActiveSlideChange(newCenterDataIndex);\n    }\n    this.setState(\n      () => {\n        return {\n          swipeStarted: false,\n          renderedSlides: newSlides,\n          swipRight: disableSwipeRightState ? false : steps < 0 ? true : false\n        };\n      },\n      () => {\n        setTimeout(() => {\n          this.resetSlides();\n        }, 0);\n      }\n    );\n  };\n\n  private getSwipeX(e: any) {\n    if (e.type[0] === 'm') return e.clientX;\n    try {\n      return e.touches[0]?.clientX || e.changedTouches[0]?.clientX;\n    } catch {\n      throw Error('Something went wrong with getting mouse position');\n    }\n  }\n\n  private getSlideDOMInfo = (slideIndex: number) => {\n    const { slideWidth } = this.props;\n    const listRef = this.listRef.current as HTMLDivElement;\n    const slideDOM = listRef.getElementsByClassName(\n      `react-stacked-center-carousel-slide-${slideIndex}`\n    )[0];\n    const slideRect = slideDOM.getBoundingClientRect();\n    const { left: carouselLeft } = listRef.getBoundingClientRect();\n    const scale = slideRect.width / slideWidth;\n    const additionalOffset = slideWidth * 0.5 * (1 - scale);\n    const slideOffsetLeft = slideRect.left - carouselLeft - additionalOffset;\n    const slideCenterOffset = slideOffsetLeft - this.centerPosition;\n    return { scale, slideDOM, slideCenterOffset };\n  };\n\n  private getSlideScaleAndOpacity = (centerOffset: number) => {\n    const targetSlide =\n      this.sortedSlideInfo.find(({ position }) => {\n        return Math.ceil(position) >= centerOffset;\n      }) || this.sortedSlideInfo[this.sortedSlideInfo.length - 1];\n\n    const {\n      position,\n      slideIndex,\n      scale,\n      maxTransformDistance,\n      maxTransformScale,\n      maxTransformOpacity,\n      opacity\n    } = targetSlide;\n    const offset = Math.ceil(position) - centerOffset;\n    const offsetPercentage =\n      maxTransformDistance.left === 0\n        ? 0\n        : (offset / maxTransformDistance.left) * (slideIndex <= 0 ? -1 : 1);\n\n    return {\n      scale: scale + maxTransformScale.left * offsetPercentage,\n      opacity: opacity + maxTransformOpacity.left * offsetPercentage\n    };\n  };\n\n  private centerOffset = (slideIndex: number) => {\n    const { slideCenterOffset } = this.getSlideDOMInfo(slideIndex);\n    return Math.abs(this.slideInfoMap[0].position - slideCenterOffset);\n  };\n\n  private onSwipeStart = (e: React.MouseEvent | React.TouchEvent) => {\n    const { onActiveSlideChange, disableSwipe } = this.props;\n    if (disableSwipe) return;\n    const initalSwipeX = this.getSwipeX(e);\n    const { renderedSlides } = this.state;\n\n    // preserve the slides\n    clearTimeout(this.clearSlideTimeout);\n    let shiftDirection = 0;\n    let centerDataIndex = 0;\n    if (this.centerOffset(-1) < this.centerOffset(0)) shiftDirection = 1;\n    else if (this.centerOffset(1) < this.centerOffset(0)) shiftDirection = -1;\n\n    const newRenderedSlides: renderedSlide[] = [];\n    const swipePositionInfo = [];\n    for (let slide of renderedSlides) {\n      const { slideIndex, dataIndex } = slide;\n      if (dataIndex === -1) {\n        newRenderedSlides.push(slide);\n        swipePositionInfo.push({\n          slideIndex: slideIndex,\n          maxLeft: 0,\n          maxRight: 0\n        });\n        continue;\n      }\n      const newSlideIndex = slideIndex + shiftDirection;\n      if (Math.abs(newSlideIndex) > this.slidePerSide) continue;\n      if (newSlideIndex === 0) centerDataIndex = dataIndex;\n\n      const { slideCenterOffset, scale } = this.getSlideDOMInfo(slideIndex);\n      const { opacity } = this.getSlideScaleAndOpacity(slideCenterOffset);\n      const { maxTransformDistance, position } =\n        this.safeGetSlideInfo(newSlideIndex);\n\n      swipePositionInfo.push({\n        slideIndex: newSlideIndex,\n        maxLeft: slideCenterOffset - position + maxTransformDistance.left,\n        maxRight: position + maxTransformDistance.right - slideCenterOffset\n      });\n      newRenderedSlides.push({\n        ...slide,\n        scale,\n        opacity,\n        position: slideCenterOffset,\n        slideIndex: newSlideIndex,\n        zIndex: this.getZIndex(newSlideIndex)\n      });\n    }\n\n    if (onActiveSlideChange && shiftDirection !== 0) {\n      onActiveSlideChange(centerDataIndex);\n    }\n    this.setState({\n      swipeStarted: true,\n      initalSwipeX: initalSwipeX,\n      renderedSlides: newRenderedSlides,\n      prevRenderedSlides: [...newRenderedSlides],\n      swipePositionInfo\n    });\n  };\n\n  private onSwipe = (e: React.MouseEvent | React.TouchEvent) => {\n    const { swipeStarted } = this.state;\n    if (!swipeStarted) {\n      return;\n    }\n    const { initalSwipeX, prevRenderedSlides, swipePositionInfo } = this.state;\n    const { slideWidth } = this.props;\n    let tempShift = false;\n\n    const currentSwipeX = this.getSwipeX(e);\n    const swipeDistance = initalSwipeX - currentSwipeX;\n    const delta = Math.abs(swipeDistance);\n    const swipeLeft = swipeDistance > 0;\n\n    const transformFactor = (10 / slideWidth) * delta;\n    // 0.8^10 = 0.1, when the user swipes the length of a slide then all slides will slide 90% to the left\n    const transformPercentage =\n      1 - Math.pow(1 - (this.props.swipeSpeed || 0.5), transformFactor);\n\n    const newRenderedSlides = prevRenderedSlides.map((slide, index) => {\n      const { position, slideIndex, dataIndex } = slide;\n      if (dataIndex === -1) return slide;\n      const maxDeltaX =\n        swipePositionInfo[index][swipeLeft ? 'maxLeft' : 'maxRight'];\n\n      const targetPosition =\n        position + (swipeLeft ? -1 : 1) * maxDeltaX * transformPercentage;\n      const { scale, opacity } = this.getSlideScaleAndOpacity(targetPosition);\n      let zIndex = slide.zIndex;\n      if (Math.abs(slideIndex) === 1) {\n        if (this.centerOffset(slideIndex) < this.centerOffset(0)) {\n          zIndex = this.maxZIndex;\n          tempShift = true;\n        }\n      }\n      return {\n        ...slide,\n        position: targetPosition,\n        scale,\n        opacity,\n        zIndex\n      };\n    });\n\n    this.setState({\n      renderedSlides: newRenderedSlides,\n      tempShift\n    });\n  };\n\n  private resetSlides = () => {\n    const { renderedSlides } = this.state;\n    const newDefault = renderedSlides.map((slide) => {\n      const { opacity, scale, position } = this.safeGetSlideInfo(\n        slide.slideIndex\n      );\n      return {\n        ...slide,\n        zIndex: this.getZIndex(slide.slideIndex),\n        opacity,\n        scale,\n        position\n      };\n    });\n    this.setState(() => {\n      return { renderedSlides: newDefault, swipRight: false };\n    }, this.debouncedClearInvisibleSlide);\n  };\n\n  private onSwipeEnd = () => {\n    const { swipeStarted } = this.state;\n    if (!swipeStarted) return;\n    const { renderedSlides } = this.state;\n\n    const newCenterSlide = renderedSlides.find(\n      ({ zIndex }) => zIndex === this.maxZIndex\n    );\n\n    this.moveCarousel(newCenterSlide?.slideIndex || 0);\n    this.setState({ tempShift: false });\n  };\n\n  goNext = () => {\n    this.moveCarousel(1);\n  };\n\n  goBack = () => {\n    this.moveCarousel(-1);\n  };\n\n  swipeTo = (steps: number) => {\n    this.moveCarousel(steps);\n  };\n\n  render() {\n    const { swipeStarted, renderedSlides, swipRight, tempShift } = this.state;\n    const {\n      slideComponent: Component,\n      transitionTime = StackedCarousel.defaultTransitionTime,\n      className,\n      data,\n      slideWidth,\n      customTransition,\n      carouselWidth,\n      useGrabCursor,\n      height\n    } = this.props;\n\n    const cursor =\n      (useGrabCursor && (swipeStarted ? 'grabbing' : 'grab')) || 'default';\n    return (\n      <div\n        className={`react-stacked-center-carousel ${className || ''}`}\n        onMouseDown={this.onSwipeStart}\n        onMouseUp={this.onSwipeEnd}\n        onMouseMove={this.onSwipe}\n        onMouseLeave={this.onSwipeEnd}\n        onTouchStart={this.onSwipeStart}\n        onTouchMove={this.onSwipe}\n        onTouchEnd={this.onSwipeEnd}\n        ref={this.listRef}\n        style={{\n          width: carouselWidth,\n          height: height || this.height,\n          position: 'relative',\n          overflow: 'hidden',\n          cursor\n        }}\n      >\n        {renderedSlides.map(\n          ({\n            opacity,\n            slideIndex,\n            dataIndex,\n            position,\n            scale,\n            key,\n            zIndex\n          }) => {\n            const ID = dataIndex === -1 ? `hidden-${key}` : slideIndex;\n            const zDuration = transitionTime * (swipRight ? 0.6 : 1);\n            const transition = swipeStarted\n              ? 'none'\n              : customTransition ||\n                `all ${transitionTime}ms ease, z-index ${zDuration}ms ease`;\n            const isCenterSlide = tempShift\n              ? zIndex === this.maxZIndex\n              : slideIndex === 0;\n            return (\n              <div\n                key={key}\n                className={`react-stacked-center-carousel-slide-${ID}`}\n                draggable={false}\n                style={{\n                  position: 'absolute',\n                  display: 'flex',\n                  left: `calc(50% - ${slideWidth / 2}px)`,\n                  transform: `translateX(${position}px) scale(${scale})`,\n                  width: slideWidth,\n                  transition,\n                  opacity,\n                  zIndex\n                }}\n              >\n                {dataIndex !== -1 && (\n                  <Component\n                    dataIndex={dataIndex}\n                    data={data}\n                    slideIndex={slideIndex}\n                    isCenterSlide={isCenterSlide}\n                    swipeTo={this.swipeTo}\n                  />\n                )}\n              </div>\n            );\n          }\n        )}\n      </div>\n    );\n  }\n}\n\nfunction shouldRecaclculate(prop1: props, prop2: props) {\n  if (\n    prop1.slideWidth !== prop2.slideWidth ||\n    prop1.carouselWidth !== prop2.carouselWidth ||\n    prop1.maxVisibleSlide !== prop2.maxVisibleSlide ||\n    prop1.currentVisibleSlide !== prop2.currentVisibleSlide ||\n    prop1.fadeDistance !== prop2.fadeDistance ||\n    prop1.customScales?.join('') !== prop2.customScales?.join('')\n  )\n    return true;\n  return false;\n}\n","import React from 'react';\nimport { useResizeDetector } from 'react-resize-detector';\nimport { StackedCarousel } from '.';\nexport interface ResponsiveContainerProps {\n  render: (\n    parentWidth: number,\n    carouselRef?: React.RefObject<StackedCarousel>\n  ) => React.ReactNode;\n  carouselRef?: React.MutableRefObject<StackedCarousel | undefined>;\n}\n\nexport default function ResponsiveContainer(props: ResponsiveContainerProps) {\n  const { render, carouselRef } = props;\n  const { width, ref } = useResizeDetector();\n\n  return (\n    <div\n      ref={ref as React.RefObject<HTMLDivElement>}\n      className='stacked-carousel-responsive-container'\n      style={{ width: '100%' }}\n    >\n      {width && render(width, carouselRef as React.RefObject<StackedCarousel>)}\n    </div>\n  );\n}\n","import React from 'react';\nimport {\n  StackedCarousel,\n  ResponsiveContainer,\n  StackedCarouselSlideProps\n} from 'react-stacked-center-carousel';\nimport { Box, Typography } from '@material-ui/core';\nimport Highlight from 'react-highlight';\nimport Fab from '@material-ui/core/Fab';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nexport const data = [\n  {\n    cover: 'https://images6.alphacoders.com/679/thumb-1920-679459.jpg',\n    title: 'Interstaller'\n  },\n  {\n    cover: 'https://images2.alphacoders.com/851/thumb-1920-85182.jpg',\n    title: 'Inception'\n  },\n  {\n    cover: 'https://images6.alphacoders.com/875/thumb-1920-875570.jpg',\n    title: 'Blade Runner 2049'\n  },\n  {\n    cover: 'https://images6.alphacoders.com/114/thumb-1920-1141749.jpg',\n    title: 'Icon man 3'\n  },\n  {\n    cover: 'https://images3.alphacoders.com/948/thumb-1920-948864.jpg',\n    title: 'Venom'\n  },\n  {\n    cover: 'https://images2.alphacoders.com/631/thumb-1920-631095.jpg',\n    title: 'Steins Gate'\n  },\n  {\n    cover: 'https://images4.alphacoders.com/665/thumb-1920-665242.png',\n    title: 'One Punch Man'\n  },\n  {\n    cover: 'https://images2.alphacoders.com/738/thumb-1920-738176.png',\n    title: 'A Silent Voice'\n  },\n  {\n    cover: 'https://images8.alphacoders.com/100/thumb-1920-1005531.jpg',\n    title: 'Demon Slayer'\n  },\n  {\n    cover: 'https://images2.alphacoders.com/582/thumb-1920-582804.png',\n    title: 'Attack On Titan'\n  }\n];\n\ninterface props {\n  fadeDistance?: number;\n  transitionTime?: number;\n  useGrabCursor?: boolean;\n  useButton?: boolean;\n  customScales?: number[];\n  onActiveSlideChange?: (activeSlide: number) => void;\n}\n\nexport default function ResponsiveCarousel(props: props) {\n  const {\n    fadeDistance,\n    transitionTime = 450,\n    useGrabCursor = true,\n    useButton = true,\n    customScales,\n    onActiveSlideChange\n  } = props;\n  const ref = React.useRef<StackedCarousel>();\n  return (\n    <div style={{ width: '100%', position: 'relative' }}>\n      <ResponsiveContainer\n        carouselRef={ref}\n        render={(width, carouselRef) => {\n          let currentVisibleSlide = 5;\n          if (width <= 1440) currentVisibleSlide = 3;\n          if (width <= 1080) currentVisibleSlide = 1;\n          return (\n            <StackedCarousel\n              ref={carouselRef}\n              slideComponent={Card}\n              slideWidth={width < 800 ? width - 40 : 750}\n              carouselWidth={width}\n              data={data}\n              currentVisibleSlide={currentVisibleSlide}\n              maxVisibleSlide={5}\n              transitionTime={transitionTime}\n              useGrabCursor={useGrabCursor}\n              {...(customScales ? { customScales } : {})}\n              {...(fadeDistance !== undefined ? { fadeDistance } : {})}\n              {...(onActiveSlideChange ? { onActiveSlideChange } : {})}\n            />\n          );\n        }}\n      />\n      {useButton && (\n        <>\n          <Fab\n            style={{ position: 'absolute', top: '40%', left: 10, zIndex: 10 }}\n            size='small'\n            color='primary'\n            onClick={() => {\n              ref.current?.goBack();\n            }}\n          >\n            <ArrowBackIcon />\n          </Fab>\n          <Fab\n            style={{ position: 'absolute', top: '40%', right: 10, zIndex: 10 }}\n            size='small'\n            color='primary'\n            onClick={() => {\n              ref.current?.goNext();\n            }}\n          >\n            <ArrowForwardIcon />\n          </Fab>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport const Card = React.memo(function (props: StackedCarouselSlideProps) {\n  const { data, dataIndex } = props;\n  const { cover } = data[dataIndex];\n  return (\n    <div\n      style={{\n        width: '100%',\n        height: 300,\n        userSelect: 'none'\n      }}\n      className='my-slide-component'\n    >\n      <img\n        style={{\n          height: '100%',\n          width: '100%',\n          objectFit: 'cover',\n          borderRadius: 0\n        }}\n        draggable={false}\n        src={cover}\n      />\n    </div>\n  );\n}, function (prev: StackedCarouselSlideProps, next: StackedCarouselSlideProps) {\n  return prev.dataIndex === next.dataIndex;\n});\n\nexport const CodeHighlight = React.memo(function (props: { code: string }) {\n  return (\n    <Box p={0} pt={1} pb={1}>\n      <Highlight className='typescript'>{props.code}</Highlight>\n    </Box>\n  );\n});\n","import React from 'react';\nimport { Divider, Box, Typography } from '@material-ui/core';\nimport ResponsiveCarousel, { CodeHighlight } from './carouselGenerator';\n\nconst Demo = () => {\n  return (\n    <div>\n      <ResponsiveCarousel useGrabCursor={true} />\n      <p className='sectionTitle'>Installation</p>\n      <Divider />\n      <Box p={0} pt={1} pb={0}>\n        <Typography variant='body1'>\n          See the github link{' '}\n          <Typography\n            variant='body1'\n            className='site-title'\n            component='a'\n            href='https://github.com/BotDanny/react-stacked-center-carousel'\n            target='_blank'\n          >\n            react-stacked-center-carousel\n          </Typography>\n        </Typography>\n      </Box>\n      <p className='sectionTitle'>Limitations</p>\n      <Divider />\n      <Box p={0} pt={1} pb={0}>\n        <Typography variant='body1'>\n          react-stacked-center-carousel does not provid default pagination and\n          button. That's it!\n        </Typography>\n      </Box>\n      <p className='sectionTitle'>Why use react-stacked-center-carousel?</p>\n      <Divider />\n      <Box p={0} pt={1} pb={1}>\n        <ul>\n          {benefits.map((content, index) => {\n            return (\n              <li key={index}>\n                <Typography variant='body1' style={{ fontWeight: 600 }}>\n                  <span>{content}</span>\n                </Typography>\n              </li>\n            );\n          })}\n        </ul>\n      </Box>\n      <p className='sectionTitle'>Demo Code (Copy and paste into a new file and you can start exploring!)</p>\n      <Divider />\n      <CodeHighlight code={code} />\n    </div>\n  );\n};\n\nconst benefits = [\n  'This is the only non-react-native npm package that offers a responsive, swipeable, center mode stacked carousel that scales its slides.',\n  'Extremely performant: only the visible slides are rendered, very minimum re-render with appropriate memoization.',\n  'react-stacked-center-carousel is responsive! It also allows you to display a variable amount of slide based on container width.',\n  'Smooth transition with fade in and fade out animation.',\n  'Touch screen support.',\n  'Infinite(looped) swiping.'\n];\n\nexport default Demo;\n\nconst code = `import React from \"react\";\nimport {\n  StackedCarousel,\n  ResponsiveContainer,\n} from \"react-stacked-center-carousel\";\nimport Fab from \"@material-ui/core/Fab\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\n\nexport const data = [\n  {\n    cover: \"https://images6.alphacoders.com/679/thumb-1920-679459.jpg\",\n    title: \"Interstaller\",\n  },\n  {\n    cover: \"https://images2.alphacoders.com/851/thumb-1920-85182.jpg\",\n    title: \"Inception\",\n  },\n  {\n    cover: \"https://images6.alphacoders.com/875/thumb-1920-875570.jpg\",\n    title: \"Blade Runner 2049\",\n  },\n  {\n    cover: \"https://images6.alphacoders.com/114/thumb-1920-1141749.jpg\",\n    title: \"Icon man 3\",\n  },\n  {\n    cover: \"https://images3.alphacoders.com/948/thumb-1920-948864.jpg\",\n    title: \"Venom\",\n  },\n  {\n    cover: \"https://images2.alphacoders.com/631/thumb-1920-631095.jpg\",\n    title: \"Steins Gate\",\n  },\n  {\n    cover: \"https://images4.alphacoders.com/665/thumb-1920-665242.png\",\n    title: \"One Punch Man\",\n  },\n  {\n    cover: \"https://images2.alphacoders.com/738/thumb-1920-738176.png\",\n    title: \"A Silent Voice\",\n  },\n  {\n    cover: \"https://images8.alphacoders.com/100/thumb-1920-1005531.jpg\",\n    title: \"Demon Slayer\",\n  },\n  {\n    cover: \"https://images2.alphacoders.com/582/thumb-1920-582804.png\",\n    title: \"Attack On Titan\",\n  },\n];\n\n\nexport default function ResponsiveCarousel(props) {\n  const ref = React.useRef();\n  return (\n    <div style={{ width: \"100%\", position: \"relative\" }}>\n      <ResponsiveContainer\n        carouselRef={ref}\n        render={(parentWidth, carouselRef) => {\n          // If you want to use a ref to call the method of StackedCarousel, you cannot set the ref directly on the carousel component\n          // This is because ResponsiveContainer will not render the carousel before its parent's width is determined\n          // parentWidth is determined after your parent component mounts. Thus if you set the ref directly it will not work since the carousel is not rendered\n          // Thus you need to pass your ref object to the ResponsiveContainer as the carouselRef prop and in your render function you will receive this ref object\n          let currentVisibleSlide = 5;\n          if (parentWidth <= 1440) currentVisibleSlide = 3;\n          if (parentWidth <= 1080) currentVisibleSlide = 1;\n          return (\n            <StackedCarousel\n              ref={carouselRef}\n              slideComponent={Card}\n              slideWidth={parentWidth < 800 ? parentWidth - 40 : 750}\n              carouselWidth={parentWidth}\n              data={data}\n              currentVisibleSlide={currentVisibleSlide}\n              maxVisibleSlide={5}\n              useGrabCursor\n            />\n          );\n        }}\n      />\n      <>\n        <Fab\n          style={{ position: \"absolute\", top: \"40%\", left: 10, zIndex: 10 }}\n          size=\"small\"\n          color=\"primary\"\n          onClick={() => {\n            ref.current?.goBack();\n          }}\n        >\n          <ArrowBackIcon />\n        </Fab>\n        <Fab\n          style={{ position: \"absolute\", top: \"40%\", right: 10, zIndex: 10 }}\n          size=\"small\"\n          color=\"primary\"\n          onClick={() => {\n            ref.current?.goNext(6);\n          }}\n        >\n          <ArrowForwardIcon />\n        </Fab>\n      </>\n    </div>\n  );\n}\n\n// Very import to memoize your Slide component otherwise there might be performance issue\n// At minimum your should do a simple React.memo(SlideComponent)\n// If you want the absolute best performance then pass in a custom comparator function like below \nexport const Card = React.memo(function (props) {\n  const { data, dataIndex } = props;\n  const { cover } = data[dataIndex];\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: 300,\n        userSelect: \"none\",\n      }}\n      className=\"my-slide-component\"\n    >\n      <img\n        style={{\n          height: \"100%\",\n          width: \"100%\",\n          objectFit: \"cover\",\n          borderRadius: 0,\n        }}\n        draggable={false}\n        src={cover}\n      />\n    </div>\n  );\n});\n`;\n","import React from 'react';\nimport { Divider, Typography, Box } from '@material-ui/core';\nimport { CodeHighlight } from './carouselGenerator';\nimport DOMSnapShot from './DOM.png';\nimport Highlight from 'react-highlight';\nimport fadeDistanceDemo from './fadeDistance.png';\n\nconst PropsPage = () => {\n  return (\n    <div>\n      <Highlight className='javascript'>\n        {\n          \"import { StackedCarousel, StackedCarouselSlideProps } from 'react-stacked-center-carousel';\"\n        }\n      </Highlight>\n      <p className='sectionTitle'>DOM structure</p>\n      <Box p={0} mb={2}>\n        <Typography variant='body1'>\n          react-stacked-center-carousel will render 2 invisible slides in\n          addition to the visible slides, one at each end. This is for the fade\n          in/out transition.\n        </Typography>\n        <Typography variant='body1'>\n          Your slide component will be wrapper inside a div that has class name\n          \"react-stacked-center-carousel-slide-X\" where X is the number of slide\n          away from center. For example X=0 means it is the center slide. X=1\n          means it is the first slide to the right of the center slide. This can\n          be useful to add css.\n        </Typography>\n        <img src={DOMSnapShot} style={{ width: '100%' }} />\n      </Box>\n      <p className='sectionTitle'>Props (methods are at the bottom)</p>\n      <Divider style={{ marginBottom: 30 }} />\n      {props.map((prop, index) => {\n        const {\n          name,\n          type,\n          example,\n          explanation,\n          defaultValue,\n          customExplanation\n        } = prop;\n        return (\n          <div\n            className='prop-section-container'\n            key={name}\n            style={{\n              borderBottom:\n                index === props.length - 1\n                  ? 'rgba(0, 0, 0, 0.205) solid 1px'\n                  : 'none'\n            }}\n          >\n            <div className='prop-section-main'>\n              <span className='props-title'>{name}</span>\n              <span className='props-type'>{type}</span>\n              {defaultValue && (\n                <span className='props-default'>default: {defaultValue}</span>\n              )}\n            </div>\n            <div className='prop-section-secondary'>\n              <span className='props-explanation'>{explanation}</span>\n              {customExplanation}\n              {example && (\n                <span className='props-example'>\n                  <CodeHighlight code={example} />\n                </span>\n              )}\n            </div>\n          </div>\n        );\n      })}\n      <p className='sectionTitle'>Methods</p>\n      <Divider style={{ marginBottom: 30 }} />\n      {methods.map((method, index) => {\n        const { name, explanation } = method;\n        return (\n          <div\n            className='prop-section-container'\n            key={name}\n            style={{\n              borderBottom:\n                index === methods.length - 1\n                  ? 'rgba(0, 0, 0, 0.205) solid 1px'\n                  : 'none'\n            }}\n          >\n            <div className='prop-section-main'>\n              <span className='props-title'>{name}</span>\n            </div>\n            <div className='prop-section-secondary'>\n              <span className='props-explanation'>{explanation}</span>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default PropsPage;\n\nconst slideProps = [\n  {\n    name: 'data',\n    explanation:\n      'the same data prop that is passed into StackedCarousel component. Holds your data to render each slide. It should have at least the length of the number of slide to display'\n  },\n  {\n    name: 'dataIndex',\n    explanation:\n      'Index of the data that the current slide is responsible for rendering. Data can be extrated by data[dataIndex]'\n  },\n  {\n    name: 'slideIndex',\n    explanation:\n      'Index of the current slide. 0 represents the center slide, 1 represents the slide that is at the right side of the center slide, and 1 slide away. -1 represents the slide that is at the left side of the center slide, and 1 slide away. And so on. For example, if you have 5 slides to display, then slideIndex will be -2 -1 0 1 2 respectively.'\n  },\n  {\n    name: 'isCenterSlide',\n    explanation:\n      'Indicate if the current slide is the center slide. You should use this over slideIndex === 0.'\n  },\n  {\n    name: 'swipeTo: (steps: number) => void',\n    explanation:\n      'A function to move the carousel {steps} step. For example swipeTo(2) will shift the center 2 slides to the right and swipeTo(-3) will shift the center 3 slides to the left'\n  }\n];\n\nconst props = [\n  {\n    name: 'data*',\n    type: 'any[]',\n    example:\n      'const data = [{ url: \"xxx1\", title: \"image1\" }, { url: \"xxx2\", title: \"image2\" }]',\n    explanation: 'A list of data that will be passed into each slide as a prop.'\n  },\n  {\n    name: 'carouselWidth*',\n    type: 'number',\n    example: `<ResponsiveContainer render={parentWidth => <StackedCarousel ... carouselWidth={parentWidth}/>`,\n    explanation: `The width of the carousel. \n      If you are using the responsive container that react-stacked-center-carousel provides, then you can set it to the container width from the parentWidth parameter passed into the render function.`\n  },\n  {\n    name: 'slideWidth*',\n    type: 'number',\n    example: '<StackedCarousel ... slideWidth={750}/>',\n    explanation:\n      'The width of each slide. Note that your slide component will be wrapped inside a div that has the width of slideWidth.'\n  },\n  {\n    name: 'slideComponent*',\n    type: 'React.ComponentType',\n    example:\n      'const { data, dataIndex, slideIndex, isCenterSlide, swipeTo } = props;',\n    customExplanation: (\n      <>\n        <span className='props-explanation'>\n          Your component to render each slide. Shoud be <b>memoized!</b> It will\n          receive the following 5 props:\n        </span>\n        <ul>\n          {slideProps.map((content, index) => {\n            return (\n              <li key={index}>\n                <Typography\n                  variant='body1'\n                  style={{ fontWeight: 600, marginBottom: 0 }}\n                >\n                  {content.name}\n                </Typography>\n                <Typography variant='body1'>{content.explanation}</Typography>\n              </li>\n            );\n          })}\n        </ul>\n      </>\n    )\n  },\n  {\n    name: 'maxVisibleSlide*',\n    type: 'number',\n    example: '<StackedCarousel ... maxVisibleSlide={5} />',\n    explanation:\n      'Maximum amount of visible slides to display, must be an odd number. If you want to have different number of slides to display based on the container width then you need to provide the currentVisibleSlide prop.'\n  },\n  {\n    name: 'currentVisibleSlide',\n    type: 'number',\n    defaultValue: 'maxVisibleSlide',\n    example:\n      '<StackedCarousel ... maxVisibleSlide={5} currentVisibleSlide={3} />',\n    explanation:\n      'Current number of visible slides to display, defaults to maxVisibleSlide. Must be smaller or equal to maxVisibleSlide and must be an odd number. This is useful if you have break points (for example you want to display 7 slides if viewport width is between 1280px and 1920px, 5 slides for 1280px - 720px, and 3 slides for 720px - 0px).'\n  },\n  {\n    name: 'className',\n    type: 'string',\n    explanation: 'class name applied to the carousel container that contains the slides.'\n  },\n  {\n    name: 'disableSwipe',\n    type: 'boolean',\n    default: 'false',\n    explanation: 'disable drag/swipe.'\n  },\n  {\n    name: 'onActiveSlideChange',\n    type: '(activeSlide: number) => void',\n    example:\n      '<StackedCarousel ... onActiveSlideChange={ newCenterDataIndex => setCenter(newCenterDataIndex) } />',\n    explanation:\n      'A call back function that will be called on first mount and when the center slide changes. It will receive on parameter which is the data index of the new center slide. This is useful for pagination.'\n  },\n  {\n    name: 'customScales',\n    type: 'number[]',\n    defaultValue: '[1, 0.85, 0.7225, 0.614125, ...]',\n    example: `<StackedCarousel ... customScales={[1, 0.85, 0.7, 0.55]} maxVisibleSlide={5} />\n// Note the last element in customScales is the scale applied to the invisible slide used for fade in/out transition`,\n    explanation:\n      'An array of numbers indicating the scale applied to the slide. Index 0 of this array represents the scale applied to the center slide (must be 1), index 1 of this array represents the scale applied to the slide that are 1 slide away from the center (slideIndex 1 and -1), so on. It must have the length of (maxVisibleSlide + 1) / 2 where the last element is the scale applied to the invisible slide at the end used for the fade transition.'\n  },\n  {\n    name: 'fadeDistance',\n    type: 'number',\n    defaultValue: 'evenly spread',\n    example: '<StackedCarousel ... fadeDistance={0.5} />',\n    explanation:\n      'A number between 1 and 0 that indicate the percentage of the amount of available that can be used for transition.',\n    customExplanation: <img style={{ width: 500 }} src={fadeDistanceDemo} />\n  },\n  {\n    name: 'swipeSpeed',\n    type: 'number',\n    defaultValue: '0.5',\n    explanation:\n      'A number between 0.01 to 0.99 that determines how fast the swipping is. 0.99 for the fastest swipe.'\n  },\n  {\n    name: 'transitionTime',\n    type: 'number',\n    defaultValue: '450',\n    explanation: 'Transition time (in ms) applied to all transition.'\n  },\n  {\n    name: 'customTransition',\n    type: 'string',\n    defaultValue: 'all 450ms ease 0s',\n    explanation: 'Custom css transition applied to all slide.'\n  },\n  {\n    name: 'useGrabCursor',\n    type: 'boolean',\n    defaultValue: 'false',\n    explanation:\n      'Whether or not to use the grab and grabbing cursor when swiping.'\n  },\n  {\n    name: 'height',\n    type: 'number',\n    explanation:\n      'The height applied to the carousel. react-stacked-center-carousel will automatically determine the height of the carousel based on the height of the center slide. However, the height is set after the carousel mount so if that causes trouble you can set your own height.'\n  }\n];\n\nconst methods = [\n  {\n    name: 'goNext()',\n    explanation: 'Move to the next slide. Equivalent to swipeTo(1).'\n  },\n  {\n    name: 'goBack()',\n    explanation: 'Move to the previous slide. Equivalent to swipeTo(-1).'\n  },\n  {\n    name: 'swipeTo( steps: number )',\n    explanation:\n      'Move {steps} slide away from the center. For example swipeTo(-3) will shift the center 3 slides to the left.'\n  }\n];\n","import React from 'react';\nimport { Divider, Box, Typography } from '@material-ui/core';\nimport ResponsiveCarousel from './carouselGenerator';\nimport Highlight from 'react-highlight';\n\nconst ResponsiveContainerProps = () => {\n  return (\n    <div>\n      <Highlight className='javascript'>\n        {\"import { ResponsiveContainer } from 'react-stacked-center-carousel';\"}\n      </Highlight>\n      <p className='sectionTitle'>Props</p>\n      <Divider style={{ marginBottom: 30 }} />\n      <div className='prop-section-container'>\n        <div className='prop-section-main'>\n          <span className='props-title'>render*</span>\n          <span className='props-type'>{`( parentWidth: number, carouselRef?: React.RefObject<StackedCarousel> ) => StackedCarousel`}</span>\n        </div>\n        <div className='prop-section-secondary'>\n          <Typography className='props-explanation'>\n            A render prop function that returns the StackedCarousel component. It\n            will receive two arguments:\n          </Typography>\n          <Typography className='props-explanation'>\n            The first argument is a number argument called parentWidth which\n            represents the width of ResponsiveContainer's parent element.\n          </Typography>\n          <Typography className='props-explanation'>\n            If ResponsiveContainer receives the prop carouselRef, then the\n            render function will receive the second argument called carouselRef\n            which is the same ref object passed into the carouselRef prop.\n          </Typography>\n        </div>\n      </div>\n      <div\n        className='prop-section-container'\n        style={{\n          borderBottom: 'rgba(0, 0, 0, 0.205) solid 1px'\n        }}\n      >\n        <div className='prop-section-main'>\n          <span className='props-title'>carouselRef</span>\n          <span className='props-type'>{`React.MutableRefObject<StackedCarousel | undefined>`}</span>\n        </div>\n        <div className='prop-section-secondary'>\n          <Typography className='props-explanation'>\n            A React ref object that will be passed into the render function as\n            the second argument. Useful for assigning ref to the carousel\n            component\n          </Typography>\n          <Typography className='props-explanation'>\n            The reason you want to assign the ref through the render function\n            instead of directly on the carousel is because ResponsiveContainer\n            will not call the render function before it figures out its parent's\n            width. Its parent's width can be determined only after its parent\n            mount. Thus, on the first mount parentWidth is undefined, and the\n            render function will not be called. If you set the ref directly on\n            the carousel then it will not work since nothing is rendered yet.\n          </Typography>\n        </div>\n      </div>\n      <p className='sectionTitle'>Example</p>\n      <Divider style={{ marginBottom: 30 }} />\n      <Highlight className='javascript'>{example}</Highlight>\n    </div>\n  );\n};\n\nconst example = `function ResponsiveCarousel() {\n    // If you want to use a ref to call the method of StackedCarousel, you cannot set the ref directly on the carousel component\n    // This is because ResponsiveContainer will not render the carousel before its parent's width is determined\n    // parentWidth is determined after your parent component mounts. Thus if you set the ref directly it will not work since the carousel is not rendered\n    // Thus you need to pass your ref object to the ResponsiveContainer as the carouselRef prop and in your render function you will receive this ref object\n    const ref = React.useRef<ResponsiveContainer>();\n    return (\n      <div style={{ width: '100%', position: 'relative' }}>\n            <ResponsiveContainer carouselRef={ref} render={(parentWidth, carouselRef) => {\n                        let currentVisibleSlide = 5;\n                        if (parentWidth <= 1280) currentVisibleSlide = 3;\n                        if (parentWidth <= 720) currentVisibleSlide = 1;\n                        return (\n                            <StackedCarousel\n                                  ref={carouselRef}\n                                  slideComponent={Card}\n                                  slideWidth={500}\n                                  carouselWidth={parentWidth}\n                                  data={data}\n                                  maxVisibleSlide={5}\n                                  currentVisibleSlide={currentVisibleSlide}\n                            />\n            )}}/>\n      </div>\n    );\n}`;\n\nexport default ResponsiveContainerProps;\n","import React from 'react';\nimport { Divider, Box, Typography } from '@material-ui/core';\nimport {CodeHighlight} from './carouselGenerator';\n\nconst PerformancePage = () => {\n  return (\n    <div>\n      <p className='sectionTitle' style={{ marginTop: 0 }}>\n        Performance did not meet expectation?\n      </p>\n      <Divider />\n      <Box p={0} pt={1} pb={0}>\n        <Typography variant='body1'>\n          react-stacked-center-carousel is virtualized, meaning that it only\n          renders slides that the user can see. Thus it should be quite\n          performant.\n        </Typography>\n        <Typography variant='body1' style={{ fontWeight: 600 }}>\n          However, I highly encourage you to memoize your slide component by\n          either using React.memo or extending PureComponent. This is because\n          when you are swiping the carousel (by mourse drag or by touch twipe),\n          the position of each slide will be updated in real time based on your\n          swipe displacement. This means that A LOT of re-renders will be\n          triggered, usually 100+ for a small swipe. Thus, without memoization,\n          you will likely to experience poor render performance.\n        </Typography>\n      </Box>\n      <p className='sectionTitle'>Unexpected drag behavior?</p>\n      <Divider />\n      <Box p={0} pt={1} pb={0}>\n        <Typography variant='body1'>\n          when you want to swipe the carousel by drag, you should disable the\n          drag on your slide component by setting {`draggable={false}`}.\n          Otherwise the default browser drag behavor might be triggered.\n        </Typography>\n        <CodeHighlight code={code}/>\n      </Box>\n    </div>\n  );\n};\n\nexport default PerformancePage;\n\n\nconst code = `const MySlide = React.memo(function (props: StackedCarouselSlideProps) {\n  // ...\n  return (\n    <div className='my-slide-component'>\n      <img draggable={false}/>\n    </div>\n  );\n});\n`","import React from 'react';\nimport { Divider, Box, Typography } from '@material-ui/core';\nimport ResponsiveCarousel from './carouselGenerator';\nimport Highlight from 'react-highlight';\n\nconst ResponsiveExamplePage = () => {\n  return (\n    <div>\n      <p className='sectionTitle' style={{ marginTop: 0 }}>\n        Setting breakpoints\n      </p>\n      <Divider />\n      <Box p={0} pt={1} pb={0} mb={2}>\n        <Typography variant='body1'>\n          If you want to your carousel to be responsive, then you need to use\n          the ResponsiveContainer component. If you also want to display\n          different amount of slides at different width, then you need to use\n          the parentWidth argument provided in the render function to\n          determine the amount of slide to display and pass that value as\n          currentVisibleSlide prop to the carousel component.\n        </Typography>\n        <Typography variant='body1'>\n          The example below is a responsive carousel that changes the amount of\n          slide displayed (1-5) based on viewport width.\n        </Typography>\n      </Box>\n      <ResponsiveCarousel useGrabCursor={false} useButton={false}/>\n      <p className='sectionTitle'>Code</p>\n      <Divider />\n      <Box p={0} pt={1} pb={1}>\n        <Highlight className='javascript'>{code}</Highlight>\n      </Box>\n    </div>\n  );\n};\n\nconst code = `import { StackedCarousel, ResponsiveContainer, StackedCarouselSlideProps } from 'react-stacked-center-carousel';\n\nconst data = [{cover: 'https://coverfiles.alphacoders.com/664/66426.jpg', title: 'Interstaller'} ...];\n\nfunction ResponsiveCarousel() {\n    const ref = React.useRef<ResponsiveContainer>();\n    return (\n      <div style={{ width: '100%', position: 'relative' }}>\n            // ResponsiveContainer will have the same width as its parent element\n            <ResponsiveContainer carouselRef={ref} render={(parentWidth, carouselRef) => {\n              let currentVisibleSlide = 5;\n              if (parentWidth <= 1440) currentVisibleSlide = 3;\n              else if (parentWidth <= 1080) currentVisibleSlide = 1;\n              return (\n                  <StackedCarousel\n                          ref={carouselRef}\n                          data={data}\n                          carouselWidth={parentWidth}\n                          slideWidth={750}\n                          slideComponent={Slide}\n                          maxVisibleSlide={5}\n                          currentVisibleSlide={currentVisibleSlide}\n                          useGrabCursor={true}\n                  />\n              )}}/>\n      </div>\n    );\n}\n\n// Very important to memoize your component!!!\nconst Card = React.memo(\n    function (props: StackedCarouselSlideProps) {\n        const { data, dataIndex } = props;\n        const { cover } = data[dataIndex];\n        return (\n            <div style={{width: '100%', height: 300}}>\n                <img\n                    style={{height: '100%', width: '100%', objectFit: 'cover', borderRadius: 10}}\n                    draggable={false}\n                    src={cover}\n                />\n            </div>\n        );\n    },\n    function (prev: StackedCarouselSlideProps, next: StackedCarouselSlideProps) {\n      return prev.dataIndex === next.dataIndex;\n    }\n);`;\n\nexport default ResponsiveExamplePage;\n","import React from 'react';\nimport { Divider, Box, Typography } from '@material-ui/core';\nimport ResponsiveCarousel from './carouselGenerator';\nimport Highlight from 'react-highlight';\n\nconst fadeDistanceExamplePage = () => {\n  return (\n    <div>\n      <p className='sectionTitle' style={{ marginTop: 0 }}>\n        Default fadeDistance: evenly spread \n      </p>\n      <Divider style={{ marginBottom: 20 }}/>\n      <ResponsiveCarousel useGrabCursor={false} useButton={false}/>\n      <p className='sectionTitle'>fadeDistance = 0.5: 50% width of empty space</p>\n      <Divider style={{ marginBottom: 20 }}/>\n      <ResponsiveCarousel useGrabCursor={false} fadeDistance={0.5} useButton={false}/>\n    </div>\n  );\n};\n\nexport default fadeDistanceExamplePage","import React from 'react';\nimport { Divider, Box, Typography } from '@material-ui/core';\nimport ResponsiveCarousel from './carouselGenerator';\nimport Highlight from 'react-highlight';\n\nconst CustomScaleExamplePage = () => {\n  return (\n    <div>\n      <p className='sectionTitle' style={{ marginTop: 0 }}>\n        Default scale (0.85 ^ how many slide away from center): \n      </p>\n      <Divider style={{ marginBottom: 20 }}/>\n      <ResponsiveCarousel useGrabCursor={false} useButton={false}/>\n      <p className='sectionTitle'>customScale = [1, 0.7, 0.5, 0.2]</p>\n      <Divider style={{ marginBottom: 20 }}/>\n      <ResponsiveCarousel useGrabCursor={false} useButton={false} customScales={[1, 0.7, 0.5, 0.2]}/>\n    </div>\n  );\n};\n\nexport default CustomScaleExamplePage","import React from 'react';\nimport { Divider, Box, Typography } from '@material-ui/core';\nimport { data } from './carouselGenerator';\nimport ResponsiveCarousel from './carouselGenerator';\nimport Highlight from 'react-highlight';\n\nconst PaginationExamplePage = () => {\n  const [centerSlideDataIndex, setCenterSlideDataIndex] = React.useState(0);\n  const onCenterSlideDataIndexChange = React.useCallback((newIndex: number) => {\n    setCenterSlideDataIndex(newIndex);\n  }, []);\n\n  return (\n    <div>\n      <p className='sectionTitle' style={{ marginTop: 0 }}>\n        A simple pagination\n      </p>\n      <Divider />\n      <Box p={0} mt={1} mb={4}>\n        <Typography variant='body1'>\n          react-stacked-center-carousel does not provide default pagination\n          component. This is because most of the time developers use their own\n          pagination component anyway.\n        </Typography>\n        <Typography variant='body1'>\n          Instead, react-stacked-center-carousel provides an api called\n          onActiveSlideChange to let developers make their own pagination.\n        </Typography>\n      </Box>\n      <div style={{ width: '100%', position: 'relative' }}>\n        <ResponsiveCarousel\n          useGrabCursor={true}\n          onActiveSlideChange={onCenterSlideDataIndexChange}\n        />\n      </div>\n      <Pagination centerSlideDataIndex={centerSlideDataIndex} />\n      <p className='sectionTitle' style={{ marginTop: 30 }}>\n        Code\n      </p>\n      <Divider />\n      <CodeBox />\n    </div>\n  );\n};\n\nexport default PaginationExamplePage;\n\nfunction Pagination(props: { centerSlideDataIndex: number }) {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginTop: 20\n      }}\n    >\n      {data.map((_, index) => {\n        const isCenterSlide = props.centerSlideDataIndex === index;\n        return (\n          <div\n            key={index}\n            style={{\n              height: 15,\n              width: 15,\n              borderRadius: '100%',\n              background: isCenterSlide ? 'black' : 'none',\n              border: '1px solid black'\n            }}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nconst CodeBox = React.memo(function () {\n  return (\n    <Box p={0} pt={1} pb={1}>\n      <Highlight className='javascript'>{code}</Highlight>\n    </Box>\n  );\n});\n\nconst code = `const data = [{cover: 'https://coverfiles.alphacoders.com/664/66426.jpg', title: 'Interstaller'} ...];\n\nfunction Pagination(props: { centerSlideDataIndex: number }) {\n    return (\n            <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: 20 }}>\n                {data.map((_, index) => {\n                    const isCenterSlide = props.centerSlideDataIndex === index;\n                    return <div style={{ height: 15, width: 15, borderRadius: '100%', background: isCenterSlide ? 'black' : 'none', border: '1px solid black' }}/>\n                })}\n            </div>\n    );\n}\n\nfunction ResponsiveCarousel() {\n    const [centerSlideDataIndex, setCenterSlideDataIndex] = React.useState(0);\n    const onCenterSlideDataIndexChange = (newIndex: number) => {\n        setCenterSlideDataIndex(newIndex);\n    };\n    // ResponsiveContainer will make the carousel to have the width of its parent\n    return (\n      <div style={{ width: '100%', position: 'relative' }}>\n            <ResponsiveContainer render={(parentWidth) => {\n                        let currentVisibleSlide = 5;\n                        if (parentWidth <= 1280) currentVisibleSlide = 3;\n                        if (parentWidth <= 720) currentVisibleSlide = 1;\n                        return (\n                            <StackedCarousel\n                                    data={data}\n                                    carouselWidth={parentWidth}\n                                    slideWidth={500}\n                                    slideComponent={Card}\n                                    maxVisibleSlide={5}\n                                    currentVisibleSlide={currentVisibleSlide}\n                                    onActiveSlideChange={onCenterSlideDataIndexChange}\n                            />\n            )}}/>\n            <Pagination centerSlideDataIndex={centerSlideDataIndex} />\n      </div>\n    );\n}`;\n","import React from 'react';\nimport { CodeHighlight } from './carouselGenerator';\nimport { Divider, Box, Typography } from '@material-ui/core';\nimport './Twitch.css';\nimport {\n  StackedCarousel,\n  ResponsiveContainer,\n  StackedCarouselSlideProps\n} from 'react-stacked-center-carousel';\nimport cover from './twitchcover.jpg';\nimport noice from './noice.gif';\nimport Fab from '@material-ui/core/Fab';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nconst data = new Array(10).fill({ coverImage: cover, video: noice });\n\nconst TwitchExample = () => {\n  const ref = React.useRef<StackedCarousel>();\n  return (\n    <div className='twitch'>\n      <p className='sectionTitle' style={{ marginTop: 0 }}>\n        Reproducing the carousel on{' '}\n        <a target='_blank' href='https://www.twitch.tv/'>\n          Twitch\n        </a>\n      </p>\n      <Divider />\n      <Box p={0} pt={1} pb={0} mb={2}>\n        <Typography variant='body1'>\n          Twitch has the best stacked carousel design I've seen, that's why I\n          made this package with the goal to surpass Twitch's implementation.\n        </Typography>\n        <Typography variant='body1'>\n          Without much modification, you can match react-center-caousel almost\n          exactly with Twitch's design. The more tricky part is getting the css\n          transition right.\n        </Typography>\n      </Box>\n      <div style={{ width: '100%', position: 'relative' }}>\n        <ResponsiveContainer\n          carouselRef={ref}\n          render={(width, carouselRef) => {\n            return (\n              <StackedCarousel\n                ref={carouselRef}\n                slideComponent={Slide}\n                slideWidth={750}\n                carouselWidth={width}\n                data={data}\n                maxVisibleSlide={5}\n                disableSwipe\n                customScales={[1, 0.85, 0.7, 0.55]}\n                transitionTime={450}\n              />\n            );\n          }}\n        />\n        <Fab\n          className='twitch-button left'\n          size='small'\n          onClick={() => ref.current?.goBack()}\n        >\n          <KeyboardArrowLeftIcon style={{ fontSize: 30 }} />\n        </Fab>\n        <Fab\n          className='twitch-button right'\n          size='small'\n          onClick={() => ref.current?.goNext()}\n        >\n          <KeyboardArrowRightIcon style={{ fontSize: 30 }} />\n        </Fab>\n      </div>\n      <p className='sectionTitle'>\n        <a\n          target='_blank'\n          href='https://github.com/BotDanny/react-stacked-center-carousel/blob/master/example/src/pages/CompleteTwitchExample.tsx'\n        >\n          JS Code\n        </a>{' '}\n        <a\n          target='_blank'\n          href='https://github.com/BotDanny/react-stacked-center-carousel/blob/master/example/src/pages/Twitch.css'\n        >\n          CSS Code\n        </a>\n      </p>\n      <Divider />\n      <CodeHighlight code={code} />\n    </div>\n  );\n};\n\nexport default TwitchExample;\n\nexport const Slide = React.memo(function (props: StackedCarouselSlideProps) {\n  const { data, dataIndex, isCenterSlide, swipeTo, slideIndex } = props;\n  const [loadDelay, setLoadDelay] = React.useState<any>();\n  const [removeDelay, setRemoveDelay] = React.useState<any>();\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (isCenterSlide) {\n      clearTimeout(removeDelay);\n      setLoadDelay(setTimeout(() => setLoaded(true), 1000));\n    } else {\n      clearTimeout(loadDelay);\n      if (loaded) setRemoveDelay(setTimeout(() => setLoaded(false), 1000));\n    }\n  }, [isCenterSlide]);\n\n  React.useEffect(() => () => {\n    clearTimeout(removeDelay);\n    clearTimeout(loadDelay);\n  });\n\n  const { coverImage, video } = data[dataIndex];\n\n  return (\n    <div className='twitch-card' draggable={false}>\n      <div className={`cover fill ${isCenterSlide && loaded ? 'off' : 'on'}`}>\n        <div\n          className='card-overlay fill'\n          onClick={() => {\n            if (!isCenterSlide) swipeTo(slideIndex);\n          }}\n        />\n        <img className='cover-image fill' src={coverImage} />\n      </div>\n      {loaded && (\n        <div className='detail fill'>\n          <img className='video' src={video} />\n          <div className='discription'>\n            <CardHeader\n              avatar={<Avatar className='avatar'>D</Avatar>}\n              title='Bot Danny'\n              subheader='September 14, 2016'\n            />\n            <Typography variant='body2' color='textSecondary' component='p'>\n              Lorem Ipsum is simply dummy text of the printing and typesetting\n              industry. Lorem Ipsum has been the industry's standard dummy text\n              ever since the 1500s, when an unknown printer took a galley of\n              type and scrambled it to make a type specimen book. He done a\n              great job!\n            </Typography>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n\nconst code = `import { StackedCarousel, ResponsiveContainer, StackedCarouselSlideProps } from 'react-stacked-center-carousel';\n\nconst data = new Array(10).fill({ coverImage: \"xxx\", video: \"xxx\" })\n\nfunction ResponsiveCarousel() {\n    const ref = React.useRef<ResponsiveContainer>();\n    return (\n      <div style={{ width: '100%', position: 'relative' }}>\n          <ResponsiveContainer\n              carouselRef={ref}\n              render={(width, carouselRef) => {\n                return (\n                  <StackedCarousel\n                      ref={carouselRef}\n                      slideComponent={Slide}\n                      slideWidth={750}\n                      carouselWidth={width}\n                      data={data}\n                      maxVisibleSlide={5}\n                      disableSwipe\n                      customScales={[1, 0.85, 0.7, 0.55]}\n                      transitionTime={450}\n                  />\n                );\n              }}\n          />\n        <Fab\n            className='twitch-button left'\n            size='small'\n            onClick={() => ref.current?.goBack()}\n        >\n            <KeyboardArrowLeftIcon style={{ fontSize: 30 }} />\n        </Fab>\n        <Fab\n            className='twitch-button right'\n            size='small'\n            onClick={() => ref.current?.goNext()}\n        >\n            <KeyboardArrowRightIcon style={{ fontSize: 30 }} />\n        </Fab>\n      </div>\n    );\n}\n\nconst Slide = React.memo(function (props: StackedCarouselSlideProps) {\n    const { data, dataIndex, isCenterSlide, swipeTo, slideIndex } = props;\n    const [loadDelay, setLoadDelay] = React.useState<any>();\n    const [removeDelay, setRemoveDelay] = React.useState<any>();\n    const [loaded, setLoaded] = React.useState(false);\n    React.useEffect(() => {\n      if (isCenterSlide) {\n        clearTimeout(removeDelay);\n        setLoadDelay(setTimeout(() => setLoaded(true), 1000));\n      } else {\n        clearTimeout(loadDelay);\n        if (loaded) setRemoveDelay(setTimeout(() => setLoaded(false), 1000));\n      }\n    }, [isCenterSlide]);\n\n    React.useEffect(() => () => {\n      clearTimeout(removeDelay);\n      clearTimeout(loadDelay);\n    });\n\n    const { coverImage, video } = data[dataIndex];\n\n    return (\n      <div className='twitch-card' draggable={false}>\n        <div className={\\`cover fill \\${isCenterSlide && loaded ? 'off' : 'on'}\\`}>\n          <div\n            className='card-overlay fill'\n            onClick={() => {\n              if (!isCenterSlide) swipeTo(slideIndex);\n            }}\n          />\n          <img className='cover-image fill' src={coverImage} />\n        </div>\n        {loaded && (\n          <div className='detail fill'>\n            <img className='video' src={video} />\n            <div className='discription'>\n              <CardHeader\n                avatar={<Avatar className='avatar'>D</Avatar>}\n                title='Bot Danny'\n                subheader='September 14, 2016'\n              />\n              <Typography variant='body2' color='textSecondary' component='p'>\n                ...\n              </Typography>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n});`;\n","import React from 'react';\nimport {\n  Divider,\n  Drawer,\n  List,\n  ListItem,\n  ListItemText,\n  Typography\n} from '@material-ui/core';\nimport { Link, useLocation } from 'react-router-dom';\nimport Demo from './pages/Demo';\nimport PropsPage from './pages/CarouselPropPage';\nimport ResponsiveContainerPropPage from './pages/ResponsiveContainer';\nimport CommonQuestionPage from './pages/CommonQuestionPage';\nimport ResponsiveExamplePage from './pages/ResponsiveExamplePage';\nimport fadeDistanceExamplePage from './pages/FadeDistanceExample';\nimport CustomScaleExamplePage from './pages/CustomScaleExample';\nimport PaginationExamplePage from './pages/PaginationExample';\nimport TwitchExample from './pages/Twitch';\n\nexport default function SideNav(props: any) {\n  const { openNav } = props;\n  const { pathname } = useLocation();\n  return (\n    <div>\n      <Drawer\n        variant='permanent'\n        anchor='left'\n        className='doc-drawer'\n        classes={{ paper: openNav ? 'on' : '' }}\n      >\n        <Typography\n          variant='h6'\n          className='site-title'\n          component='a'\n          href='https://github.com/BotDanny/react-stacked-center-carousel'\n          target='_blank'\n          style={{ fontSize: 18 }}\n        >\n          stacked-center-carousel\n        </Typography>\n        <Divider />\n        <List>\n          {[introductions, api, examples, propExamples].map((pages, index) => {\n            return (\n              <div key={index}>\n                <ListItem>\n                  <ListItemText\n                    primary={titles[index]}\n                    className='first-level'\n                  />\n                </ListItem>\n                {pages.map(({ label, route }) => (\n                  <ListItem\n                    button\n                    key={label}\n                    className='second-level'\n                    component={Link}\n                    to={route}\n                    selected={pathname === route}\n                  >\n                    <ListItemText primary={label} />\n                  </ListItem>\n                ))}\n              </div>\n            );\n          })}\n        </List>\n      </Drawer>\n    </div>\n  );\n}\n\nconst titles = ['Introduction', 'API', 'Examples', 'Prop example'];\n\nexport const introductions = [\n  {\n    label: 'Demo',\n    route: '/',\n    component: Demo\n  },\n  {\n    label: 'Common question',\n    route: '/question',\n    component: CommonQuestionPage\n  }\n];\n\nexport const api = [\n  { label: 'StackedCarousel', route: '/StackedCarousel', component: PropsPage },\n  {\n    label: 'ResponsiveContainer',\n    route: '/responsivecontainer',\n    component: ResponsiveContainerPropPage\n  }\n];\n\nexport const examples = [\n  {\n    label: 'Twitch.tv',\n    route: '/twitch',\n    component: TwitchExample\n  },\n  {\n    label: 'Responsive',\n    route: '/responsive',\n    component: ResponsiveExamplePage\n  },\n  {\n    label: 'Pagination',\n    route: '/pagination',\n    component: PaginationExamplePage\n  }\n];\n\nexport const propExamples = [\n  {\n    label: 'fadeDistance',\n    route: '/fadeDistance',\n    component: fadeDistanceExamplePage\n  },\n  {\n    label: 'customScales',\n    route: '/customScales',\n    component: CustomScaleExamplePage\n  }\n];\n","import React from 'react';\nimport SideNav, { examples, introductions, api, propExamples } from './sideNav';\nimport { Switch, Route } from 'react-router-dom';\nimport Fab from '@material-ui/core/Fab';\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\nconst App = () => {\n  const pages = [examples, introductions, api, propExamples].flat();\n  const [openNav, setNav] = React.useState(false);\n  return (\n    <div className='root-content'>\n      <SideNav openNav={openNav}/>\n      <main>\n        <Switch>\n          {pages.map(({ route, component }) => {\n            const Page = component as any;\n            return (\n              <Route path={route} exact key={route}>\n                <Page />\n              </Route>\n            );\n          })}\n        </Switch>\n      </main>\n      <Fab\n        color='primary'\n        aria-label='add'\n        onClick={() => setNav(!openNav)}\n        className=\"toggle-button\"\n        size='small'\n      >\n        <MenuOpenIcon />\n      </Fab>\n    </div>\n  );\n};\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { HashRouter as Router } from 'react-router-dom'\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)","module.exports = __webpack_public_path__ + \"static/media/DOM.eb4b4efe.png\";","module.exports = __webpack_public_path__ + \"static/media/fadeDistance.624f58d3.png\";","module.exports = __webpack_public_path__ + \"static/media/twitchcover.e7e5e4d7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/noice.26c67cf5.gif\";"],"sourceRoot":""}